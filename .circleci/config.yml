version: 2.1

orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.1.1

jobs:
  build-and-deploy:
    docker:
      - image: cimg/node:20.9
    steps:
      - checkout
      - aws-cli/setup

      # Install dependencies
      - run: npm ci

      # Build frontend Angular app
      - run: npm run build

      # Compile backend TypeScript
      - run: npm run build_api

      - run:
          name: Set up SSH key
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 400 ~/.ssh/id_rsa
            ssh-keyscan ec2-3-149-229-145.us-east-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      # Deploy frontend to S3
      - run: aws s3 sync ./dist/kirby-online-store/browser/ s3://udacity-bucket-doy

      # Deploy the entire build folder, database.json, migrations, and other files to EC2 and run migrations
      - run:
          name: Deploy Backend & Migrate DB on EC2
          command: |
            if [ ! -d ./build ]; then
              echo "Error: ./build directory does not exist. Check your build process."
              exit 1
            fi

            # Install PostgreSQL client before SSH if not present
            ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com \<< 'EOF'
            sudo yum update -y
            sudo yum install -y postgresql17
            psql --version
            EOF

            # SSH into EC2 and install Node.js 20.x
            ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com "curl -sL https://rpm.nodesource.com/setup_20.x | sudo -E bash - && sudo dnf install -y nodejs"


            # Copy the backend files to EC2 instance
            scp -r ./build/* ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com:/home/ec2-user/app/
            scp ./database.json ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com:/home/ec2-user/app/
            scp -r ./migrations/ ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com:/home/ec2-user/app/
            scp ./package.json ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com:/home/ec2-user/app/

            # Creates the prod and test DB
            ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com \
            "PGPASSWORD=${POST_PASSWORD} psql -h ${POST_HOST} -U ${POST_USER} -d ${POST_DATABASE} -f /home/ec2-user/app/migrations/db_init/db_init.sql"

            # Verify the databases were created
            ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com \
            "PGPASSWORD=${POST_PASSWORD} psql -h ${POST_HOST} -U ${POST_USER} -d ${POST_DATABASE} -c '\l'"

            # SSH into EC2 again, install dependencies, run migrations, and start the API in the background
            ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-149-229-145.us-east-2.compute.amazonaws.com \<< EOF
            export POST_DATABASE=$POST_DATABASE
            export POST_DATABASE_TEST=$POST_DATABASE_TEST
            export POST_HOST=$POST_HOST
            export POST_USER=$POST_USER
            export POST_PASSWORD=$POST_PASSWORD
            export ENV=$ENV
            cd ~/app && npm install && npm run migrate-up && nohup npm run start_api &
            EOF


workflows:
  build-deploy:
    jobs:
      - build-and-deploy
